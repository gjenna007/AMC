    function bruteforceregSTEP(begin,STEP,beeldnr)
cd pngimages
name=['0000' num2str(beeldnr)];
orig=imread(['Frame' name(length(name)-4:length(name)) '.png']);
name=['0000' num2str(beeldnr+1)];
next=imread(['Frame' name(length(name)-4:length(name)) '.png']);
cd ../matchresults
s1=size(orig,1);s2=size(orig,2);
vw=round(double(s1)/40);hw=round(double(s2)/40);
%Je neem nu van ieder vierkantje het gemiddelde, en beschouwt al die gemiddelden als data waarvan je de variantie berekent
%Je berekent die van negen vierkanten en kiest het vierkant met de
%grootste variantie.
WINvar=[];
for WINver=12*vw+1:4*vw:20*vw+1
    for WINhor=12*hw+1:4*hw:20*hw+1
        vierkantjes=zeros(1,64);
        for ver=0:7
            for hor=0:7
                blokje=next(WINver+ver*vw:WINver+(ver+1)*vw,WINhor+hor*hw:WINhor+(hor+1)*hw,:);
                vierkantjes(ver*8+hor+1)=mean(blokje(:));
            end
        end
        WINvar=[WINvar var(vierkantjes)];
    end
end
bestWIN=find(WINvar==max(WINvar),1,'first');
WINhor=12*hw+mod(bestWIN-1,3)*4*hw;
WINver=12*vw+floor((bestWIN-1)/3)*4*vw;
ORIGINver=WINver+4*vw;ORIGINhor=WINhor+4*hw;%DE OORSPRONG VAN ALLE TRANSLATIES EN ROTATIES
centreindicator=zeros(8*vw+1,8*hw+1);
centreindicator(4*vw+1,4*hw+1)=1;
sse=zeros(28611,4);index=1;
for opt=begin:STEP:28611
    transh=mod(opt-1,51)-25;
    theta=floor((opt-1)/(51*51))*4-20;
    transv=floor(((opt-((theta+20)/4)*51*51)-1)/51)-25;%floor(mod(opt-1,51*51),51)-25
         [beeldnr begin STEP theta transv]
            matchblok_old=next(WINver+transv:WINver+transv+8*vw,WINhor+transh:WINhor+transh+8*hw,:);
            matchblok=imrotate(matchblok_old,theta);
            bv=size(matchblok,1);bh=size(matchblok,2);
            mask=matchblok>0;
            centre=imrotate(centreindicator,theta);
            [cv,ch]=find(centre,1,'first');
            origblok=double(mask).*double(orig(ORIGINver-cv+1:ORIGINver-cv+bv,ORIGINhor-ch+1:ORIGINhor-ch+bh,:));
            sse(index,1)=sum(sum(sum((double(matchblok)-origblok).*(double(matchblok)-origblok))))/sum(mask(:));
            sse(index,2)=theta;
            sse(index,3)=transv;
            sse(index,4)=transh;
            index=index+1;
    if opt==begin
        save(['vars' name '.mat'],'WINver','WINhor','vw','hw');
        imwrite(matchblok_old,['block' name '.png'],'png')
    end
end
sse=sse(1:index-1,:);
save(['sse' num2str(begin) '-' num2str(STEP) '-' name '.mat'],'sse')
cd ..


